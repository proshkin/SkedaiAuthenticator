name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'

      - name: Update productName and artifactName in package.json (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          version="${{ env.version }}"
          sed -i "s/authenticator_\\\${version}/authenticator_${version}/g" package.json
          sed -i "s/\\\${version}/${version}/g" package.json

      - name: Update productName and artifactName in package.json (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          version="${{ env.version }}"
          sed -i '' "s/authenticator_\\\${version}/authenticator_${version}/g" package.json
          sed -i '' "s/\\\${version}/${version}/g" package.json

      - name: Update productName and artifactName in package.json (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $version="${{ env.version }}"
          (Get-Content package.json) -replace 'authenticator_\${version}', "authenticator_$version" -replace '\${version}', "$version" | Set-Content package.json
        shell: pwsh

      - name: Install dependencies
        run: npm install

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}

      - name: Upload Windows build artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: authenticator_win_${{ env.version }}.exe
          path: build/authenticator_${{ env.version }}

      - name: List build directory contents
        if: matrix.os == 'macos-latest'
        run: |
          ls -R build
      
      - name: Upload macOS .app bundle
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: authenticator_mac_${{ env.version }}_app
          path: build/mac-arm64/authenticator_${{ env.version }}.app

      - name: Upload Linux AppImage
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: authenticator_linuxAppImage_${{ env.version }}.AppImage
          path: build/authenticator_${{ env.version }}
      
      - name: Upload Linux Snap Package
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: authenticator_linuxSnap_${{ env.version }}.snap
          path: build/authenticator_${{ env.version }}
